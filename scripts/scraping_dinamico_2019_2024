import time
from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from webdriver_manager.chrome import ChromeDriverManager

def setup_driver():
    options = Options()
    options.add_argument("--user-agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3")
    options.add_argument("--disable-notifications")
    options.add_argument("--disable-infobars")
    options.add_argument("--disable-extensions")
    options.add_argument("--disable-gpu")
    options.add_argument("--no-sandbox")
    service = Service(ChromeDriverManager().install())
    driver = webdriver.Chrome(service=service, options=options)
    return driver
def navigate_to_page(driver, url):
    driver.get(url)
    WebDriverWait(driver, 10).until(EC.presence_of_element_located((By.TAG_NAME, "body")))
def interact_with_form(driver):
    try:
        element = driver.find_element(By.CSS_SELECTOR, "#busqSimpleForm\:Pluto__adquisiciones_gestion_portlet_busquedaProcedimientoPortlet__id22")
        element.click()
        time.sleep(2)  # Mimic human delay

        element2 = driver.find_element(By.XPATH, "/html/body/div[4]/table/tbody/tr[3]/td/table/tbody/tr[2]/td[2]/table/tbody/tr/td/div/div/div/table[2]/tbody/tr/td/form/div/table/tbody/tr/td[4]/select/option[4]")
        element2.click()
        time.sleep(1)

        input_element = driver.find_element(By.XPATH, "/html/body/div[4]/table/tbody/tr[3]/td/table/tbody/tr[2]/td/2]/table/tbody/tr/td/div/div/div/table[2]/tbody/tr/td/form/table[1]/tbody/tr[1]/td[2]/input")
        input_element.send_keys("Bismarck Martinez")
        time.sleep(1)

        checkboxes = [
            "/html/body/div[4]/table/tbody/tr/3]/td/table/tbody/tr/2]/td/2]/table/tbody/tr/td/div/div/div/table[2]/tbody/tr/td/form/table[2]/tbody/tr[27]/td/2]/table/tbody/tr[1]/td/4]/label/input",
            "/html/body/div[4]/table/tbody/tr/3]/td/table/tbody/tr/2]/td/2]/table/tbody/tr/td/div/div/div/table[2]/tbody/tr/td/form/table[1]/tbody/tr/11]/td/2]/table/tbody/tr[1]/td/2]/label/input",
            "/html/body/div[4]/table/tbody/tr/3]/td/table/tbody/tr/2]/td/2]/table/tbody/tr/td/div/div/div/table[2]/tbody/tr/td/form/table[2]/tbody/tr[27]/td/2]/table/tbody/tr[3]/td/2]/label/input",
            "/html/body/div[4]/table/tbody/tr[3]/td/table/tbody/tr[2]/td[2]/table/tbody/tr/td/div/div/div/table[2]/tbody/tr/td/form/table[2]/tbody/tr[29]/td[2]/input"
        ]

        for checkbox in checkboxes:
            driver.find_element(By.XPATH, checkbox).click()
            time.sleep(0.5)

        search_button = driver.find_element(By.XPATH, "/html/body/div[4]/table/tbody/tr/3]/td/table/tbody/tr/2]/td/2]/table/tbody/tr/td/div/div/div/table[2]/tbody/tr/td/form/table[3]/tbody/tr/td[1]/input")
        search_button.click()
        WebDriverWait(driver, 10).until(EC.visibility_of_element_located((By.XPATH, "/html/body/div[4]/table/tbody/tr/3]/td/table/tbody/tr/2]/td/2]/table/tbody/tr/td/div/div/div/form[2]/table[1]/tbody/tr/3]/td/table")))

    except Exception as e:
        print(f"An error occurred while interacting with the form: {e}")

def scrape_content(driver):
    try:
        content = driver.find_element(By.XPATH, "/html/body/div[4]/table/tbody/tr/3]/td/table/tbody/tr/2]/td/2]/table/tbody/tr/td/div/div/div/form[2]/table[1]/tbody/tr/3]/td").text
        return content
    except Exception as e:
        print(f"An error occurred while scraping content: {e}")
        return None
def main():
    url = "https://www.gestion.nicaraguacompra.gob.ni/siscae/portal/adquisiciones-gestion/busqueda?accion=todos&usr_ua_id=todos"
    driver = setup_driver()
    try:
        navigate_to_page(driver, url)
        interact_with_form(driver)
        scraped_data = scrape_content(driver)
        if scraped_data:
            print(scraped_data)  # Or save/write to a file
    finally:
        driver.quit()
if __name__ == "__main__":
    main()
